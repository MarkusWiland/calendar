import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import {
  add,
  eachDayOfInterval,
  endOfMonth,
  endOfWeek,
  format,
  isEqual,
  isSameMonth,
  isToday,
  parse,
  startOfToday,
  startOfWeek,
} from "date-fns";
import { useState } from "react";
export default function Home() {
  const today = startOfToday();
  const [selectedDay, setSelectedDay] = useState(today);
  const [currentMonth, setCurrentMonth] = useState(format(today, "MMM-yyyy"));
  const firstDayOfCurrentMonth = parse(currentMonth, "MMM-yyyy", new Date());
  let days = eachDayOfInterval({
    start: startOfWeek(firstDayOfCurrentMonth, { weekStartsOn: 1 }),
    end: endOfWeek(endOfMonth(firstDayOfCurrentMonth)),
  });
  console.log("days", days);
  console.log("selectedDay", selectedDay);
  console.log("currentMonth", currentMonth);
  console.log("firstDayOfCurrentMonth", firstDayOfCurrentMonth);
  console.log("today", today);
  function prevMonth() {
    const firstDayPrevMonth = add(firstDayOfCurrentMonth, { months: -1 });
    setCurrentMonth(format(firstDayPrevMonth, "MMM-yyyy"));
  }
  function nextMonth() {
    let firstDayNextMonth = add(firstDayOfCurrentMonth, { months: 1 });
    setCurrentMonth(format(firstDayNextMonth, "MMM-yyyy"));
  }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h3>{format(firstDayOfCurrentMonth, "MMMM yyyy")}</h3>
        <button onClick={prevMonth}>Prev</button>
        <button onClick={nextMonth}>Next</button>
        <div className={styles.grid}>
          <div>M</div>
          <div>T</div>
          <div>O</div>
          <div>T</div>
          <div>F</div>
          <div>L</div>
          <div>S</div>
        </div>
        <div className={styles.grid}>
          {days.map((day, dayInd) => (
            <div key={day.toString()}>
              <button
                className={`${
                  !isEqual(day, selectedDay) &&
                  !isToday(day) &&
                  isSameMonth(day, firstDayOfCurrentMonth) &&
                  "bg-black" &&
                  isEqual(day, selectedDay) &&
                  isToday(day) &&
                  "bg-red"
                } `}
              >
                {format(day, "d")}
              </button>
            </div>
          ))}
        </div>
      </main>
    </div>
  );
}
